version: '2.1'
# version: '2'
# Define your own volumes or reuse existing ones if your are in a multicontainer setup
volumes:
    node-red-data:
    kodi-data:
    kodi2-data:
    #volume_homeassistant:
    nodered_working_dir:
    node_modules:
    redis-data:
    knxd-data:
    knxd2-data:
    knxd3-data:
    knxd4-data:
    knxd5-data:
    droppy-data:
    droppy-config:
    snapdrop-config:
    heimdall-config:
    homer-data:
    ombi-config:
    letsencrypt-config:
    #browser-data:
services:
  node-red:
    build: ./node-red
    environment:
      - UDEV=1  #active le hotplug des périphérique USB par ex mais il faut que privileged true soit déclarer aussi # see https://www.balena.io/docs/reference/base-images/base-images/#working-with-dynamically-plugged-devices
      - 'DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket'
    volumes:
      - node-red-data:/data
      - nodered_working_dir:/usr/src/app
      - node_modules:/usr/local/lib/node_modules
    restart: no #always
    privileged: true
    network_mode: host
    labels:
      io.balena.features.supervisor-api: '1'  #pour les noeud nidered ??
      io.balena.features.dbus: '1'
      #???io.balena.features.kernel-modules: '1'
    cap_add:
      - SYS_RAWIO
    devices:
      - "/dev/mem:/dev/mem"
      - "/dev/gpiomem:/dev/gpiomem"
      - "/dev/i2c-1:/dev/i2c-1"
      #- "/dev/i2c-0:/dev/i2c-0"    # TODO. Modif à faire pour l'activer car utiliser pour les shields normalement
      - "/dev/i2c-4:/dev/i2c-4"
      - "/dev/ttyACM0:/dev/ttyACM0"   #Port série
      - "/dev/input/by-path/:/dev/input/by-path/"   #pour le noeud clavier avec les noeud gpio
    ports:
      - 80:80
      - 1883:1883
      - 1400:1400
      - 1880:1880
      - 1980:1880
  scp-server:
    network_mode: host
    restart: always
    build:
      context: ./scp-server
    privileged: false
    labels:
      io.balena.features.dbus: 1
    volumes:
      - node-red-data:/data/node-red-data
      - kodi-data:/data/kodi-data
      - kodi2-data:/data/kodi2-data
      #- volume_homeassistant:./volume_homeassistant
      - nodered_working_dir:/data/nodered_working_dir
      - node_modules:/data/node_modules
      - redis-data:/data/redis-data
      - knxd-data:/data/knxd-data
      - knxd2-data:/data/knxd2-data
      - knxd3-data:/data/knxd3-data
      - knxd4-data:/data/knxd4-data
      - knxd5-data:/data/knxd5-data
      - homer-data:/data/homer-data
    ports:
      - "22:22/udp"
      - "22:22/tcp"  
  samba:
    #  hostname: samba  # doesn't work
    image: dastrasmue/rpi-samba 
    command:  -u "cta:domotique" -s "node-red-data:/mount/node-red-data:rw:cta" -s "kodi-data:/mount/kodi-data:rw:cta" -s "kodi2-data:/mount/kodi2-data:rw:cta" -s "redis-data:/mount/redis-data:rw:cta" -s "knxd-data:/mount/knxd-data:rw:cta" -s "knxd2-data:/mount/knxd2-data:rw:cta" -s "knxd3-data:/mount/knxd3-data:rw:cta" -s "knxd4-data:/mount/knxd4-data:rw:cta" -s "knxd5-data:/mount/knxd5-data:rw:cta" -s "droppy-data:/mount/droppy-data:rw:cta" -s "droppy-config:/mount/droppy-config:rw:cta"
    volumes:
      - 'node-red-data:/mount/node-red-data'
      - 'kodi-data:/mount/kodi-data'
      - 'kodi2-data:/mount/kodi2-data'
      - 'redis-data:/mount/redis-data'
      - 'knxd-data:/mount/knxd-data'
      - 'knxd2-data:/mount/knxd2-data'
      - 'knxd3-data:/mount/knxd3-data'
      - 'knxd4-data:/mount/knxd4-data'
      - 'knxd5-data:/mount/knxd5-data'
      - 'droppy-data:/mount/droppy-data'
      - 'droppy-config:/mount/droppy-config'
    ports:
    #  - "137:137"
    #  - "137:137/udp"
      - "139:139"
      - "445:445"
    #  - "445:445/udp"
    restart: no #always
#  kodi:
#    build: ./kodi
#    privileged: true
#    restart: always
#    #network_mode: host
#    volumes:
#      - 'kodi-data:/data'
#    ports:
#      - "8080:8080"
#      - "9090:9090"
#    labels:
#      io.balena.features.kernel-modules: '1'
#      io.balena.features.firmware: '1'
#      io.balena.features.dbus: '1'
#      io.balena.features.supervisor-api: '1'
#      io.balena.features.balena-api: '1'
#      io.balena.update.strategy: download-then-kill
#      io.balena.update.handover-timeout: ''
#    devices:
#      - "/dev/input/by-path/:/dev/input/by-path/"   #pour le noeud clavier avec les noeud gpio
  kodi2:
    image: rimago/rpi-kodi
#    user: kodi
    network_mode: host
    restart: no
    privileged: true
    devices:
      - /dev/fb0:/dev/fb0
      - /dev/vchiq:/dev/vchiq
    volumes:
      - 'kodi2-data:/home/kodi'
#      - "/etc/timezone:/etc/timezone:ro"
#      - "/etc/localtime:/etc/localtime:ro"
    tmpfs:
      - /tmp
    environment:
      - PULSE_SERVER=127.0.0.1
#  kiosk:
#    build: ./kiosk
#    privileged: true # required for UDEV to find plugged in peripherals such as a USB mouse
#    #network_mode: host
#    environment: 
#      LAUNCH_URL: '"http://node-red/ui"'
#      KIOSK: '1'
  redis:
    build: ./redis
    privileged: true
    restart: always
    #network_mode: host
    volumes:
      - 'redis-data:/data'
    ports:
      - "6379:6379"
#  knxd:
#    build: ./knxd
#    volumes:
#      - knxd-data:/data
#    ports:
#      - 6720:6720
#      - 3671:3671
#    restart: always
#    network_mode: host
#  knxd2:
#    #build: ./knxd2
#    image: andrevs/knxd:arm64
#    privileged: true
#    ports:
#      - "3672:3672/udp"
#      - "6720:6720/tcp"
#    network_mode: "host"
#    restart: no
#    volumes:
#       - 'knxd2-data:/etc/knxd'
#  knxd3:
#   #build: ./knxd3
#    image: themegatb/knxd
#    volumes:
#      - knxd3-data:/data
#    ports:
#      - 6720:6720
#      - 3671:3671
#    restart: no
#    network_mode: host
  knxd4:
    image: spanghf37/knxd:arm64
    restart: always
    volumes:
      - 'knxd4-data:/etc/knxd/'
    network_mode: host
    ports:
      - 6720:6720
      - 3671:3671
    privileged: true
    environment:
      - UDEV=1
    cap_add:
      - SYS_RAWIO
      - SYS_MODULE
    devices:
      #- /run/udev:/run/udev:ro
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
      - /dev/ttyUSB2:/dev/ttyUSB2
      - /dev/knx
      - /dev/bus/usb:/dev/bus/usb:rwm
      - /dev/mem:/dev/mem:rw
  knxd5:
#    container_name: knxd5
    build:
      context: ./knxd5
      dockerfile: Dockerfile
      args:                                                                      
        KNXD_VERSION: 0.14.39
#    ports:
#      - "6720:6720/tcp"
#      - "3671:3671/udp"
#    cap_add:
#     - SYS_RAWIO
#     - SYS_MODULE
    restart: no  #unless-stopped
    #devices:
    #  - /dev/knx
    #  - /dev/bus/usb:/dev/bus/usb:rwm
    #  - /dev/mem:/dev/mem:rw
  droppy:
    #container_name: droppy
    image: silverwind/droppy
    ports:
      - '8989:8989'
    volumes:
      - 'droppy-data:/files'
      - 'droppy-config:/config'
    restart: no #unless-stopped
  snapdrop:
    image: ghcr.io/linuxserver/snapdrop:arm64v8-latest
    #container_name: snapdrop
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - snapdrop-config:/config
    ports:
      - 81:80
      - 443:443
    restart: no #unless-stopped
  heimdall:
    image: ghcr.io/linuxserver/heimdall:arm64v8-latest
    #container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - heimdall-config:/config
    ports:
      - 82:80
      - 443:443
    restart: unless-stopped
  homer:
    #https://github.com/bastienwirtz/homer
    image: b4bz/homer
    #To build from source, comment previous line and uncomment below
    #build: .
    container_name: homer
    volumes:
      - homer-data:/www/assets
    network_mode: host
    ports:
      - 83:80
      - 8080:8080
    environment:
      - UID=1000
      - GID=1000
    restart: no #unless-stopped
#  gpio:
#    build: ./gpio #il faut cree ce dossier
#    devices:
#      - "/dev/i2c-1:/dev/i2c-1"
#      - "/dev/mem:/dev/mem"
#      - "/dev/ttyACM0:/dev/ttyACM0"
#    cap_add:
#      - SYS_RAWIO
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ombi-config:/config
    ports:
      - 3579:3579
    restart: unless-stopped
  letsencrypt:
    image: linuxserver/letsencrypt
    container_name: letsencrypt
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - URL=inovia.be
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
    volumes:
      - letsencrypt-config:/config
    ports:
      - 444:443
      - 86:80
    restart: unless-stopped